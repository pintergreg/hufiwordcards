program menu;
type
 txt=array[1..5] of string;
 cod=array[1..5] of integer;

const WORDS=336;
      VER='v2.0.1';
      LANG1='Fi';
      LANG2='Hu';
      BATCH=84;
      BATCHES=4;

var i, n, score, position, lastposition, selected, corq, selectedBatch, selectedCard, startCard, endCard: integer;
    finish, fibase, opened, langSwitch, randomCards: boolean;
    scrtxt: array [1..5] of string;
    scrcod: array [1..5] of integer;
    asked: array [1..40] of integer;
    fi,hu: array [1..words] of string;
    mixedBatchWords: array [1..BATCH] of integer;

function encodetext(w:string):string;
{1 - ö - 246,-10 ,65526, 25088
 2 - ü - 252,-4  ,65532, 49664
 3 - ó - 243,-13 ,65523,
 4 - ő - 244,-11 ,65525,
 5 - ú - 250,-6  ,65530,
 6 - é - 233,-23 ,65513,
 7 - á - 225,-31 ,65505,
 8 - ű - 251,-5  ,65531,
 9 - í - 237,-19 ,65517,
 0 - ä - 228,-28 ,65508,}
var i:integer;
begin
 for i:=0 to length(w) do
 begin
  if (getChar(w,i)='1') then w:=setChar(w,chr(246),i);
  if (getChar(w,i)='2') then w:=setChar(w,chr(252),i);
  if (getChar(w,i)='3') then w:=setChar(w,chr(243),i);
  if (getChar(w,i)='4') then w:=setChar(w,chr(244),i);
  if (getChar(w,i)='5') then w:=setChar(w,chr(250),i);
  if (getChar(w,i)='6') then w:=setChar(w,chr(233),i);
  if (getChar(w,i)='7') then w:=setChar(w,chr(225),i);
  if (getChar(w,i)='8') then w:=setChar(w,chr(251),i);
  if (getChar(w,i)='9') then w:=setChar(w,chr(237),i);
  if (getChar(w,i)='0') then w:=setChar(w,chr(228),i);
 end;
 encodeText:=w;
end;

procedure drwscr(g:txt;h:cod);
var top,i,x:integer;
begin
 top:=20;
 setColor(0, 0, 128);
 fillRect(0, 0, getWidth, getHeight);
 x:=(getWidth - getStringWidth(g[1]))/2;
 setColor(255, 255, 0);
 drawText(g[1], x, top);
 top:=top+24+getStringHeight(g[1]);
 for i:=2 to 5 do
 begin
  x:=(getWidth - getStringWidth(g[i]))/2;
  if (h[i]>0) then
  begin
   if (selected=i) then
   begin
    setColor(255, 255, 255);
    fillRect(x-6, top-1, getStringWidth(g[i])+12, getStringHeight(g[i])+2);
    setColor(0, 0, 128);
    drawText(g[i], x, top);
   end
   else
   begin
    setColor(255, 255, 0);
    drawText(g[i], x, top);
   end;
   top:=top+4+getStringHeight(g[i]);
  end;
 end;
 if position<>0 then begin setColor(128,128,0);drawText(encodeText('Befejez7s: # gomb'),4,getHeight-getStringHeight('Befejezes: # gomb')-2);end;
 repaint;
end;

function selectFalse(n:integer):string;
var y:integer;
begin
  repeat y:=random(WORDS)+1;until y<>n;
  if fibase then
    selectFalse:=hu[y];
  else
    selectFalse:=fi[y];
end;

procedure readDataSource();
var res:resource;
    line:string;
    cf,ch,o:integer;
begin
o:=2*WORDS;
line:='.';
cf:=1;
ch:=1;
res := openResource('/data.txt');
if (resourceAvailable(res)) then
begin
 for n:=1 to o do
 begin
  if ((n mod 2)=1) then
   begin
    fi[cf]:=readLine(res);
    cf:=cf+1;
   end
  else
   begin
    hu[ch]:=readLine(res);
    ch:=ch+1;
   end;
 end;
 closeResource(res);
end;
end;

function contains(n:integer):boolean;
var r:boolean;
begin
r:=false;
for i:=1 to 40 do
begin
if n=asked[i] then begin r:=true;break;end;
end;
contains:=r;
end;

procedure createNewQuestion();
var selq:integer;
begin
selq:=random(WORDS)+1;
while contains(selq) do
 begin
  selq:=random(WORDS)+1;
 end;
asked[position]:=selq;

if (random(100)<60) then
  fibase:=true;
else
  fibase:=false;

corq:=(random(100) mod 4)+2;
if fibase then
  scrtxt[1]:=encodeText(fi[selq]);
else
  scrtxt[1]:=encodeText(hu[selq]);

scrcod[1]:=1;
for n:=2 to 5 do
begin
 if n=corq then
 begin
  if fibase then
    scrtxt[n]:=encodeText(hu[selq]);
  else
    scrtxt[n]:=encodeText(fi[selq]);
  scrcod[n]:=3;
 end
 else
 begin
  scrtxt[n]:=encodeText(selectFalse(selq));
  scrcod[n]:=2;
 end;
end;
end;

procedure drawCards(l1:string;l2:string);
var rig,p,cardWidth:integer;
    t,u:string;
begin
  setColor(0, 0, 128);
  fillRect(0, 0, getWidth, getHeight);

  cardWidth:=getStringWidth('mmmmmmmmmm')+30;

  setColor(0, 0, 0);
  drawRect(((getWidth-cardWidth)/2), 25, cardWidth, 60);
  setColor(255, 255, 255);
  fillRect(((getWidth-cardWidth)/2), 25, cardWidth, 60);

{draw l1 text to the cards}
  setColor(0, 0, 128);
  p:=pos(l1,', ');
  if (p>-1) then
  begin
    t:=copy(l1,0,p+1);
    u:=copy(l1,p+2,length(l1));
    drawText(t,(getWidth - getStringWidth(t))/2, 40);
    drawText(u,(getWidth - getStringWidth(u))/2, 60);
  end
  else
    drawText(l1,(getWidth - getStringWidth(l1))/2, 40);

  if opened then
  begin
    setColor(0, 0, 0);
    drawRect(((getWidth-cardWidth)/2), 105, cardWidth, 60);

    setColor(255, 255, 255);
    fillRect(((getWidth-cardWidth)/2), 105, cardWidth, 60);

{draw l2 text to the cards (if opened)}
  setColor(0, 0, 128);
  p:=pos(l2,', ');
  if (p>-1) then
  begin
    t:=copy(l2,0,p+1);
    u:=copy(l2,p+2,length(l2));
    drawText(t,(getWidth - getStringWidth(t))/2, 118);
    drawText(u,(getWidth - getStringWidth(u))/2, 138);
  end
  else drawText(l2,(getWidth - getStringWidth(l2))/2, 118);

  end;

{back, forward buttons}
  setColor(128,128,0);
  drawText('Vissza: # gomb',4,getHeight-getStringHeight('Vissza: # gomb')-2);

  repaint;
end;

procedure cardOptionScreen(switch:boolean);
var top,i,tmp:integer;
begin
  top:=20;
  setColor(0, 0, 128);
  fillRect(0, 0, getWidth, getHeight);

  setColor(255, 255, 0);
  drawText(encodeText('Be7ll9t7sok'), (getWidth - getStringWidth('Beallitasok'))/2, top);

  top:=top+4+getStringHeight('Beallitasok');

  drawText('Alapnyelv', (getWidth - getStringWidth('Alapnyelv'))/2, top);

  top:=top+4+getStringHeight('Alapnyelv');

  //Language option - border
  setColor(255, 255, 0);
  tmp:=(getwidth-100)/2;
  drawRoundRect(50, top, getWidth-100, 16, 2, 2);
  drawLine(50+tmp,top,50+tmp,71);

  if switch then
  begin //opt1
    setColor(255, 255, 255);
    fillRect(51, top+1, tmp-1, 15);
    setColor(0, 0, 128);
    drawText(LANG1, 50+(tmp-getStringWidth(LANG1))/2, top+2);
    setColor(128, 128, 0);
    drawText(LANG2, 50+tmp+(tmp-getStringWidth(LANG2))/2, top+2);
  end
  else
  begin //opt2
    setColor(255, 255, 255);
    fillRect(50+tmp+1, top+1, tmp-1, getStringHeight(LANG1));
    setColor(128, 128, 0);
    drawText(LANG1, 50+(tmp-getStringWidth(LANG1))/2, top+2);
    setColor(0, 0, 128);
    drawText(LANG2, 50+tmp+(tmp-getStringWidth(LANG2))/2, top+2);
  end;

  top:=top+27;

  //Batch selector
  setColor(255, 255, 0);
  drawText(encodeText('K1teg'), (getWidth - getStringWidth('Koteg'))/2, top);

  top:=top+19;{102}

  tmp:=(getwidth-80)/2;
  drawRoundRect(50, top, getWidth-100, 44, 2, 2);
  drawLine(50, top+10, getWidth-50, top+10);
  drawLine(50, top+34, getWidth-50, top+34);

  top:=top+3;
  {up arrow}
  if selectedBatch>0 then setColor(255, 255, 0) else setColor(128, 128, 0);
  drawLine(getWidth/2,top,getWidth/2-8,top+4);
  drawLine(getWidth/2,top,getWidth/2+8,top+4);

  top:=top+38;{143}
  {down arrow}
  if selectedBatch<BATCHES-1 then setColor(255, 255, 0) else setColor(128, 128, 0);
  drawLine(getWidth/2,top,getWidth/2-8,top-4);
  drawLine(getWidth/2,top,getWidth/2+8,top-4);

  setColor(255,255,255);
  fillRect(51,top-30,getWidth-101,23);
  setColor(0,0,128);

  drawText(integerToString((selectedBatch*BATCH)+1)+'-'+integerToString((selectedBatch+1)*BATCH), (getWidth - getStringWidth(integerToString((selectedBatch*BATCH)+1)+'-'+integerToString((selectedBatch+1)*BATCH)))/2, top-26);

  {random option}
  setColor(255,255,0);
  tmp:=getStringHeight('*');
  top:=top+24;
  drawRect((getWidth-getStringWidth('Veletlen sorrend')-20)/2,top+1,tmp,tmp);
  drawText(encodeText('V6letlen sorrend'),(getWidth-getStringWidth('Veletlen sorrend')+tmp)/2,top);
  setColor(255,255,255);
  drawText('*',((getWidth-getStringWidth('Veletlen sorrend')-20)/2)+3,top+1);
  if randomCards then begin
    fillRect(((getWidth-getStringWidth('Veletlen sorrend')-20)/2)+1,top+2,tmp-1,tmp-1);
    setColor(0,0,128);
    drawText('*',((getWidth-getStringWidth('Veletlen sorrend')-20)/2)+3,top+1);
  end;

  {back, forward buttons}
  setColor(255,255,0);
  drawText('Vissza: # gomb',4,getHeight-getStringHeight('Vissza: # gomb')-2);

  repaint;
end;

procedure askNewScreen();
var y:integer;
begin
if position=0 then
  begin
    scrtxt[1]:=encodeText('Men2');
    scrtxt[2]:=encodeText('K7rty7k');
    scrtxt[3]:=encodeText('Teszt');
    scrtxt[4]:=encodeText('N6vjegy');
    scrtxt[5]:=encodeText('Kil6p6s');
    scrcod[1]:=1;
    scrcod[2]:=2;
    scrcod[3]:=2;
    scrcod[4]:=2;
    scrcod[5]:=2;
    drwscr(scrtxt,scrcod);
  end;

if position=50 then
  begin
    y:=20;
    setColor(0, 0, 128);
    fillRect(0, 0, getWidth, getHeight);
    setColor(255, 255, 0);
    drawText(encodeText('N6vjegy'), (getWidth - getStringWidth('Nevjegy'))/2, y);
    y:=y+24+getStringHeight('Nevjegy');
    drawText(encodeText('HuFi Kik6rdez4'), (getWidth - getStringWidth('HuFi Kikerdezo'))/2, y);
    y:=y+6+getStringHeight('HuFi');
    drawText(VER, (getWidth - getStringWidth(VER))/2, y);
    y:=y+3+getStringHeight(VER);
    drawText(encodeText('Pint6r Gerg4'), (getWidth - getStringWidth('Pinter Gergo'))/2, y);
    y:=y+3+getStringHeight('PG');
    drawText(encodeText('Szavak sz7ma: ')+WORDS, (getWidth - getStringWidth('Szavak szama: '+WORDS))/2, getHeight-getStringHeight('Szavak szama: ')-2);
    repaint;
  end;

if position=60 then
  begin
    setColor(0, 128, 0);
    fillRect(0, 0, getWidth, getHeight);
    setColor(255, 255, 255);
    drawText('Helyes!', (getWidth - getStringWidth('Helyes!'))/2, (getHeight - getStringHeight('Helyes!'))/2);
    drawText('Helyes: '+score+'/'+lastposition+' ('+chr(246)+'ssz 40)', (getWidth - getStringWidth('Helyes: '+score+'/'+lastposition+' ('+chr(246)+'ssz 40)'))/2, (getHeight - getStringHeight('Eddig')-2));
    if lastposition=40 then drawText(encodeText('v6ge.'), (getWidth - getStringWidth('Vege.'))/2, ((getHeight*2/3) - getStringHeight('Vege.')/2));
    repaint;
  end;

if position=70 then
  begin
    setColor(128, 0, 0);
    fillRect(0, 0, getWidth, getHeight);
    setColor(255, 255, 255);
    drawText(encodeText('Hib7s!'), (getWidth - getStringWidth('Hibas!'))/2, (getHeight - getStringHeight('Hibas!'))/2);
    drawText('Helyes: '+score+'/'+lastposition+' ('+chr(246)+'ssz 40)', (getWidth - getStringWidth('Helyes: '+score+'/'+lastposition+' ('+chr(246)+'ssz 40)'))/2, (getHeight - getStringHeight('Eddig')-2));
    if lastposition=40 then drawText(encodeText('v6ge.'), (getWidth - getStringWidth('Vege.'))/2, ((getHeight*2/3) - getStringHeight('Vege.')/2));
    repaint;
  end;

if (position>0) and (position<=41) then
  begin
   createNewQuestion;
   drwscr(scrtxt,scrcod);
  end;

if position=100 then
  begin
    cardOptionScreen(langswitch);
  end;

if position=101 then
  begin
    if randomCards then y:=mixedBatchWords[selectedCard] else y:=selectedCard;
    if langswitch then
      drawCards(encodeText(fi[y]),encodeText(hu[y]))
    else
      drawCards(encodeText(hu[y]),encodeText(fi[y]));
  end;

end;


function containsA(n:integer):boolean;
var r:boolean;
begin
  r:=false;
  for i:=1 to BATCH do
  begin
    if 0=mixedBatchWords[i] then break;
    if n=mixedBatchWords[i] then begin r:=true;break;end;
  end;
  containsA:=r;
end;

procedure generateRandomCardOrder(start:integer);
var i,n:integer;
begin
  for i:=1 to BATCH do mixedBatchWords[i]:=0;
  for i:=1 to BATCH do begin
    repeat n:=random(84)+start;until not containsA(n);
    mixedBatchWords[i]:=n;
  end;
end;

{program (global variables) initialization}
procedure init();
begin
  finish:=false;    //program is not finished, used to exit trigger
  score:=0;         //right anmswers in the test mode
  selected:=2;
  position:=0;
  lastPosition:=0;
  langSwitch:=true; //first language is selected
  opened:=false;    //card 2nd language not to be shown
  selectedBatch:=0;
  selectedCard:=1;
  randomCards:=true;

  randomize;        //need to call for set random seed
  readDataSource;   //open words from file
end;


begin
  {if reading words (in procedure init) takes long a loading screen is shown}
  setColor(0, 0, 128);
  fillRect(0, 0, getWidth, getHeight);
  setColor(255, 255, 0);
  drawText(encodeText('Bet1lt6s...'), (getWidth - getStringWidth('Betoltes...'))/2, (getHeight - getStringHeight('Betoltes...'))/2);
  repaint;
  init;

 {main loop}
 while finish=false do
 begin

  {in about screen}
  if position=50 then
  begin
    if (getKeyPressed <> KE_NONE) and (getKeyPressed <> KE_KEY5) and (keyToAction(getKeyPressed) <> GA_FIRE) then position:=0;
    askNewScreen;
  end;
  
  {in main screen}
  if position=0 then
  begin
   if (selected>2) and ((getKeyPressed = KE_KEY2) or (keyToAction(getKeyPressed) = GA_UP  )) then selected:=selected-1;
   if (selected<5) and ((getKeyPressed = KE_KEY8) or (keyToAction(getKeyPressed) = GA_DOWN)) then selected:=selected+1;
   if (selected=5) and ((getKeyPressed = KE_KEY5) or (keyToAction(getKeyPressed) = GA_FIRE)) then finish:=true;
   if (selected=4) and ((getKeyPressed = KE_KEY5) or (keyToAction(getKeyPressed) = GA_FIRE)) then position:=50;
   if (selected=2) and ((getKeyPressed = KE_KEY5) or (keyToAction(getKeyPressed) = GA_FIRE)) then
   begin
     lastPosition:=0;
     position:=100;
   end;
   if (selected=3) and ((getKeyPressed = KE_KEY5) or (keyToAction(getKeyPressed) = GA_FIRE)) then
   begin
     score:=0;
     lastPosition:=0;
     position:=1;
     for i:=1 to 40 do asked[i]:=0;
   end;
   askNewScreen;
  end;

  {correct screen}
  if position=60 then
  begin
    if (getKeyPressed <> KE_NONE) and (getKeyPressed <> KE_KEY5) and (keyToAction(getKeyPressed) <> GA_FIRE) then position:=lastPosition+1;
    if position=41 then position:=0;
    askNewScreen;
  end;

  {wrong screen}
  if position=70 then
  begin
    if (getKeyPressed <> KE_NONE) and (getKeyPressed <> KE_KEY5) and (keyToAction(getKeyPressed) <> GA_FIRE) then position:=lastPosition+1;
    if position=41 then position:=0;
    askNewScreen;
  end;

  if (position>0) and (position<=41) and (position<>lastPosition) then
  begin
   lastPosition:=position;
   askNewScreen;
   delay(100);
  end;

  {in question screen}
  if (position>0) and (position<=41) and (position=lastPosition) then
  begin
    if ((getKeyPressed = KE_KEY2) or (keyToAction(getKeyPressed) = GA_UP  )) and (selected>2) then selected:=selected-1;
    if ((getKeyPressed = KE_KEY8) or (keyToAction(getKeyPressed) = GA_DOWN)) and (selected<5) then selected:=selected+1;
    drwscr(scrtxt,scrcod);
    if ((getKeyPressed = KE_KEY5) or (keyToAction(getKeyPressed) = GA_FIRE)) then
    begin
       position:=position+1;
       if (selected=corq) then
         begin
           position:=60;
           score:=score+1;
         end
       else
         begin
           position:=70;
         end;
    end;
    if ((getKeyPressed = KE_POUND)) then begin position:=0;askNewScreen;end;
  end;

  {card options srceen}
  if position=100 then
  begin
    if ((getKeyPressed = KE_KEY4) or (keyToAction(getKeyPressed) = GA_LEFT )) then langSwitch:=true;
    if ((getKeyPressed = KE_KEY6) or (keyToAction(getKeyPressed) = GA_RIGHT)) then langSwitch:=false;
    if ((getKeyPressed = KE_KEY2) or (keyToAction(getKeyPressed) = GA_UP  )) and (selectedBatch>0) then selectedBatch:=selectedBatch-1;
    if ((getKeyPressed = KE_KEY8) or (keyToAction(getKeyPressed) = GA_DOWN)) and (selectedBatch<BATCHES-1) then selectedBatch:=selectedBatch+1;
    if ((getKeyPressed = KE_KEY5) or (keyToAction(getKeyPressed) = GA_FIRE)) and (position=lastPosition) then
    begin
      lastPosition:=100;
      position:=101;
      selectedCard:=(selectedBatch*BATCH)+1;
      startCard:=selectedCard;
      endCard:=startCard+83;
      if randomCards then generateRandomCardOrder(startCard);
    end;
    {without this, coming from menu with key 5 or fire program jumped directly to the card sreen without the card option screen. this forces to wait another key5/fire}
    if ((getKeyPressed = KE_KEY5 ) or (keyToAction(getKeyPressed) = GA_FIRE)) and (position<>lastPosition) then lastPosition:=position;
    if ((getKeyPressed = KE_POUND)) then position:=0;
    if (getKeyPressed = KE_STAR) then randomCards:=not randomCards;
    askNewScreen;
  end;

  {card screen}
  if position=101 then
  begin
    if ((getKeyPressed = KE_KEY4) or (keyToAction(getKeyPressed) = GA_LEFT )) and (selectedCard>startCard) then begin selectedCard:=selectedCard-1;opened:=false;end;
    if ((getKeyPressed = KE_KEY6) or (keyToAction(getKeyPressed) = GA_RIGHT)) and (selectedCard<endCard) then begin selectedCard:=selectedCard+1;opened:=false;end;
    if ((getKeyPressed = KE_KEY2) or (keyToAction(getKeyPressed) = GA_UP  )) then opened:=false;
    if ((getKeyPressed = KE_KEY8) or (keyToAction(getKeyPressed) = GA_DOWN)) then opened:=true;
    if ((getKeyPressed = KE_POUND)) then position:=100;
    askNewScreen;
  end;
 
  {if midlet is interrupted, halt is better}
  if isMidletPaused then halt;

  {regular cyclic delay}
  delay(125);
 end;

end.